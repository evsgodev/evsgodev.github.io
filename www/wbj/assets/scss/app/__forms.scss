$input-padding-y:                       $input-btn-padding-y;
$input-padding-x:                       $input-btn-padding-x;
$input-line-height:                     $input-btn-line-height;

$input-padding-y-sm:                    $input-btn-padding-y-sm;
$input-padding-x-sm:                    $input-btn-padding-x-sm;
$input-line-height-sm:                  $input-btn-line-height-sm;

$input-padding-y-lg:                    $input-btn-padding-y-lg;
$input-padding-x-lg:                    $input-btn-padding-x-lg;
$input-line-height-lg:                  $input-btn-line-height-lg;

$input-bg:                              $white;
$input-disabled-bg:                     $gray-200;

$input-color:                           $gray-600;
$input-border-color:                    $gray-400;
$input-border-width:                    $input-btn-border-width;
$input-box-shadow:                      inset 0 1px 1px rgba($black, .075);

$input-border-radius:                   4px;
$input-border-radius-lg:                $border-radius-lg;
$input-border-radius-sm:                $border-radius-sm;

$input-focus-bg:                        $input-bg;
$input-focus-border-color:              lighten($component-active-bg, 25%);
$input-focus-color:                     $input-color;
$input-focus-width:                     $input-btn-focus-width;
$input-focus-box-shadow:                $input-btn-focus-box-shadow;

$input-placeholder-color:               $gray-600;

$input-height-border:                   $input-border-width * 2;

$input-height-inner:                    ($font-size-base * $input-btn-line-height) + ($input-btn-padding-y * 2);
$input-height:                          calc(#{$input-height-inner} + #{$input-height-border});

$input-height-inner-sm:                 ($font-size-sm * $input-btn-line-height-sm) + ($input-btn-padding-y-sm * 2);
$input-height-sm:                       calc(#{$input-height-inner-sm} + #{$input-height-border});

$input-height-inner-lg:                 ($font-size-lg * $input-btn-line-height-lg) + ($input-btn-padding-y-lg * 2);
$input-height-lg:                       calc(#{$input-height-inner-lg} + #{$input-height-border});

$input-transition:                      border-color .15s ease-in-out, box-shadow .15s ease-in-out;

label,
.label {
  margin-bottom: 0.5rem;
  font-weight: bold;
  font-size: 10px;
  letter-spacing: 0.1em;
  text-transform: uppercase;
}

.form-control {
  display: block;
  width: 100%;
  padding: $input-padding-y $input-padding-x;
  font-size: 14px;
  line-height: 19px;
  color: $input-color;
  background-color: $input-bg;
  background-clip: padding-box;
  border: $input-border-width solid $input-border-color;

  &:not(textarea) {
    height: calc(2.25rem + 4px);
  }

  .searchbar & {
    height: 40px;
    padding: 6px 12px;
  }

  // Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
  @if $enable-rounded {
    // Manually use the if/else instead of the mixin to account for iOS override
    border-radius: $input-border-radius;
  } @else {
    // Otherwise undo the iOS default
    border-radius: 0;
  }

  @include box-shadow($input-box-shadow);
  @include transition($input-transition);

  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    background-color: transparent;
    border: 0;
  }

  // Customize the `:focus` state to imitate native WebKit styles.
  @include form-control-focus();

  // Placeholder
  &::placeholder {
    color: $input-placeholder-color;
    // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
    opacity: 1;
  }

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &:disabled,
  &[readonly]:not(.flatpickr-input) {
    background-color: $input-disabled-bg;
    background-color: $success;
    // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
    opacity: 1;
  }

  &[readonly].flatpickr-input {
    background-color: #fff;
  }
}

.input-group>.custom-select:not(:last-child), .input-group>.form-control:not(:last-child) {
  border-radius: $input-border-radius;
}

.input-group {
  position: relative;
  border-radius: $input-border-radius;

  .icon {
    position: absolute;
    top: 0.75rem;
    color: $gray-500;
    z-index: 3;
  }

  .icon-prepend {
    left: 1rem;
  }

  .icon-append {
    right: 1rem;
  }
}

select.form-control {
  &:not([size]):not([multiple]) {
    height: calc(2.25rem + 4px);

    .searchbar & {
      height: 40px;
      padding: 6px 12px;
    }
  }

  &:focus::-ms-value {
    // Suppress the nested default white text on blue background highlight given to
    // the selected option text when the (still closed) <select> receives focus
    // in IE and (under certain conditions) Edge, as it looks bad and cannot be made to
    // match the appearance of the native widget.
    // See https://github.com/twbs/bootstrap/issues/19398.
    color: $input-color;
    background-color: $input-bg;
  }
}

.form-group {
  margin-bottom: 1.25rem;
}

textarea {
  resize: none;
}

.regist-avatar {
  position: relative;

  &__preview {
    position: relative;
    height: 140px;
    width: 140px;
    margin-bottom: 1rem;
    border-radius: 50%;
    overflow: hidden;
    z-index: 1;

    .checked {
      display: none;
      position: absolute;
      top: 0;
      left: 0;
      align-items: center;
      justify-content: center;
      width: 100%;
      height: 100%;
      transition: 200ms ease;
      opacity: 0;
      font-size: 2rem;
      z-index: 1;
      background-color: rgba(#000, 0.10);
      color: $success;
      transition: 200ms;
    }

    &:hover {
      .checked {
        background-color: rgba($gray-200, 0.25);
      }
    }

    .dz-started & {
      .checked {
        display: flex;
        opacity: 1;
      }
    }
  }
}

.dz-message {
  .caption {
    transition: 200ms ease;
    opacity: 1;

    .dz-started & {
      opacity: 0;
    }
  }
}
